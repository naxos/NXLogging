<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSException+NXLogging.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSException(NXLogging)</TokenIdentifier>
			<Abstract type="html">A category of NSException which provides some methods
to retrieve info for log output and comes with a set
of convenience initializers.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
            
			
			<NodeRef refid="18"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/setCause:</TokenIdentifier>
			<Abstract type="html">The underlying exception or nil.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSException *cause</Declaration>
			
			
			<Anchor>//api/name/cause</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/cause</TokenIdentifier>
			<Abstract type="html">The underlying exception or nil.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSException *cause</Declaration>
			
			
			<Anchor>//api/name/cause</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSException/cause</TokenIdentifier>
			<Abstract type="html">The underlying exception or nil.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) NSException *cause</Declaration>
			
			
			<Anchor>//api/name/cause</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/setLogTrace:</TokenIdentifier>
			<Abstract type="html">Get a string representing this exception and underlying exceptions.
The exceptions will be separated by a new line character.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/logTrace</TokenIdentifier>
			<Abstract type="html">Get a string representing this exception and underlying exceptions.
The exceptions will be separated by a new line character.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSException/logTrace</TokenIdentifier>
			<Abstract type="html">Get a string representing this exception and underlying exceptions.
The exceptions will be separated by a new line character.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/setLogInfo:</TokenIdentifier>
			<Abstract type="html">Get a simple description on this exception consisting of its
name and reason</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/logInfo</TokenIdentifier>
			<Abstract type="html">Get a simple description on this exception consisting of its
name and reason</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSException/logInfo</TokenIdentifier>
			<Abstract type="html">Get a simple description on this exception consisting of its
name and reason</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/probe:</TokenIdentifier>
			<Abstract type="html">Executes a code block and catches any exception</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (NSException *)probe:(void ( ^ ) ( ))tryBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>tryBlock</Name>
					<Abstract type="html">The block to execute</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The exception caught or nil if no exception occurred</Abstract></ReturnValue>
			<Anchor>//api/name/probe:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/raise:</TokenIdentifier>
			<Abstract type="html">Creates and raises an exception with the specified name.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (void)raise:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the exception.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/raise:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/raise:cause:format:</TokenIdentifier>
			<Abstract type="html">Creates and raises an exception with the specified name, cause, and message.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (void)raise:(NSString *)name cause:(NSException *)cause format:(NSString *)format, ...</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the exception.</Abstract>
				</Parameter><Parameter>
					<Name>cause</Name>
					<Abstract type="html">An underlying exception.</Abstract>
				</Parameter><Parameter>
					<Name>format</Name>
					<Abstract type="html">A human-readable message string (that is, the exception reason) with conversion specifications for the variable arguments that follow.</Abstract>
				</Parameter><Parameter>
					<Name>...</Name>
					<Abstract type="html">Variable information to be inserted into the formatted exception reason (in the manner of printf).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/raise:cause:format:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/raise:cause:format:arguments:</TokenIdentifier>
			<Abstract type="html">Creates and raises an exception with the specified name, cause, format, and arguments.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (void)raise:(NSString *)name cause:(NSException *)cause format:(NSString *)format arguments:(va_list)argList</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the exception.</Abstract>
				</Parameter><Parameter>
					<Name>cause</Name>
					<Abstract type="html">An underlying exception.</Abstract>
				</Parameter><Parameter>
					<Name>format</Name>
					<Abstract type="html">A human-readable message string (that is, the exception reason) with conversion specifications for the variable arguments in argList.</Abstract>
				</Parameter><Parameter>
					<Name>argList</Name>
					<Abstract type="html">Variable information to be inserted into the formatted exception reason (in the manner of vprintf).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/raise:cause:format:arguments:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/exceptionWithName:cause:reason:userInfo:</TokenIdentifier>
			<Abstract type="html">Creates and returns an exception object.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (NSException *)exceptionWithName:(NSString *)name cause:(NSException *)cause reason:(NSString *)reason userInfo:(NSDictionary *)userInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the exception.</Abstract>
				</Parameter><Parameter>
					<Name>cause</Name>
					<Abstract type="html">An underlying exception.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">A human-readable message string summarizing the reason for the exception.</Abstract>
				</Parameter><Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A dictionary containing user-defined information relating to the exception</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The created NSException object or nil if the object couldn&apos;t be created.</Abstract></ReturnValue>
			<Anchor>//api/name/exceptionWithName:cause:reason:userInfo:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/initWithName:cause:reason:userInfo:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a newly allocated exception object.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithName:(NSString *)name cause:(NSException *)cause reason:(NSString *)reason userInfo:(NSDictionary *)userInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the exception.</Abstract>
				</Parameter><Parameter>
					<Name>cause</Name>
					<Abstract type="html">An underlying exception.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">A human-readable message string summarizing the reason for the exception.</Abstract>
				</Parameter><Parameter>
					<Name>userInfo</Name>
					<Abstract type="html">A dictionary containing user-defined information relating to the exception</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The created NSException object or nil if the object couldn&apos;t be created.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithName:cause:reason:userInfo:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/logTrace:</TokenIdentifier>
			<Abstract type="html">Get a string representing this exception and underlying exceptions.
The exceptions will be separated by a new line character.</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>- (NSString *)logTrace:(BOOL)includeSymbols</Declaration>
			<Parameters>
				<Parameter>
					<Name>includeSymbols</Name>
					<Abstract type="html">Include the stack trace if set to YES</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/logTrace:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSException/logInfo:</TokenIdentifier>
			<Abstract type="html">Get a simple description on this exception consisting of its
name and reason</Abstract>
			<DeclaredIn>NSException+NXLogging.h</DeclaredIn>
			
			<Declaration>- (NSString *)logInfo:(BOOL)includeSymbols</Declaration>
			<Parameters>
				<Parameter>
					<Name>includeSymbols</Name>
					<Abstract type="html">Include the stack trace if set to YES</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/logInfo:</Anchor>
            <NodeRef refid="18"/>
		</Token>
		
        
        
	</File>
</Tokens>