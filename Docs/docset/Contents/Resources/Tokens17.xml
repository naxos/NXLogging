<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSError+NXLogging.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSError(NXLogging)</TokenIdentifier>
			<Abstract type="html">A category of NSError which provides some methods
to retrieve info for log output and comes with a set
of convenience initializers.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
            
			
			<NodeRef refid="17"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/setLogTrace:</TokenIdentifier>
			<Abstract type="html">Get a string representing this error and the underlying errors.
The errors will be separated by a new line character.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/logTrace</TokenIdentifier>
			<Abstract type="html">Get a string representing this error and the underlying errors.
The errors will be separated by a new line character.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSError/logTrace</TokenIdentifier>
			<Abstract type="html">Get a string representing this error and the underlying errors.
The errors will be separated by a new line character.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logTrace</Declaration>
			
			
			<Anchor>//api/name/logTrace</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/setLogInfo:</TokenIdentifier>
			<Abstract type="html">Get a simple description on this error consisting of its
localizedDescription, domain, and code</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/logInfo</TokenIdentifier>
			<Abstract type="html">Get a simple description on this error consisting of its
localizedDescription, domain, and code</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSError/logInfo</TokenIdentifier>
			<Abstract type="html">Get a simple description on this error consisting of its
localizedDescription, domain, and code</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *logInfo</Declaration>
			
			
			<Anchor>//api/name/logInfo</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/applicationErrorDomain</TokenIdentifier>
			<Abstract type="html">The application error domain derived from the application&apos;s bundle identifier.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (NSString *)applicationErrorDomain</Declaration>
			
			
			<Anchor>//api/name/applicationErrorDomain</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error code and the dictionary with the description.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:reason:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description reason:(NSString *)reason</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error code and the dictionary with the description and reason.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:reason:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:suggestion:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description suggestion:(NSString *)suggestion</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error code and the dictionary with the description and suggestion.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:suggestion:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSUnderlyingErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error code and the dictionary with the description and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:reason:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description reason:(NSString *)reason underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error code and the dictionary with the description, reason and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:reason:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:suggestion:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description suggestion:(NSString *)suggestion underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error code and the dictionary with the description, suggestion and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:suggestion:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:description:reason:suggestion:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code description:(NSString *)description reason:(NSString *)reason suggestion:(NSString *)suggestion underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error code and the dictionary with the description, reason, suggestion and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:description:reason:suggestion:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithCode:userInfo:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithCode:(NSInteger)code userInfo:(NSDictionary *)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>dict</Name>
					<Abstract type="html">The userInfo dictionary for the error. userInfo may be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error code and the dictionary of arbitrary data userInfo.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:userInfo:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error domain, code code and the dictionary with the description.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:reason:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description reason:(NSString *)reason</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error domain, code and the dictionary with the description and reason.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:reason:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:suggestion:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description suggestion:(NSString *)suggestion</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error domain, code and the dictionary with the description and suggestion.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:suggestion:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer. Uses applicationErrorDomain as the error domain.</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSUnderlyingErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for the applicationErrorDomain with the specified error domain, code and the dictionary with the description and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:reason:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description reason:(NSString *)reason underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error domain, code and the dictionary with the description, reason and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:reason:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:suggestion:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description suggestion:(NSString *)suggestion underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error domain, code and the dictionary with the description, suggestion and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:suggestion:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSError/errorWithDomain:code:description:reason:suggestion:underlyingError:</TokenIdentifier>
			<Abstract type="html">Convenience initializer</Abstract>
			<DeclaredIn>NSError+NXLogging.h</DeclaredIn>
			
			<Declaration>+ (instancetype)errorWithDomain:(NSString *)domain code:(NSInteger)code description:(NSString *)description reason:(NSString *)reason suggestion:(NSString *)suggestion underlyingError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>domain</Name>
					<Abstract type="html">The error domain—this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil.</Abstract>
				</Parameter><Parameter>
					<Name>code</Name>
					<Abstract type="html">The error code for the error.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The desription will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>reason</Name>
					<Abstract type="html">The reason for the failure will be stored in the userInfo dictionary with the key NSLocalizedFailureReasonErrorKey.</Abstract>
				</Parameter><Parameter>
					<Name>suggestion</Name>
					<Abstract type="html">The recovery suggestion, which will be stored in the userInfo dictionary with the key NSLocalizedDescriptionKey.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The underlyingError will be stored in the userInfo dictionary with the key NSLocalizedRecoverySuggestionErrorKey.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSError object for domain with the specified error domain, code and the dictionary with the description, reason, suggestion and the underlying error.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithDomain:code:description:reason:suggestion:underlyingError:</Anchor>
            <NodeRef refid="17"/>
		</Token>
		
        
        
	</File>
</Tokens>